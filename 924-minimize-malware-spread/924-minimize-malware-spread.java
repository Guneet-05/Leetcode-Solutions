class Solution {
    
    static int size;
    static int infected;
    
    public void DFS(int[][] graph,int src, boolean[] vis,int[] initial) {
        if(vis[src] == true) return;
        
        vis[src] = true;
        size++;
        
        if(Arrays.binarySearch(initial,src) >= 0) {
            infected++;
        }
        
        for(int i=0;i<graph.length;i++) {
            if(graph[src][i] == 1) {
                DFS(graph,i,vis,initial);
            }
        }
    }
    
    public int minMalwareSpread(int[][] graph, int[] initial) {
        Arrays.sort(initial);
        
        boolean[] vis = new boolean[graph.length];
        
        int maxSize = 0, node = initial[0];
        for(int src: initial) {
            size = 0;
            infected = 0;
            DFS(graph,src,vis,initial);
            
            if(size > maxSize && infected == 1) {
                node = src;
                maxSize = size;
            }
        }
        
        return node; 
    }
}